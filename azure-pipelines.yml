# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

jobs:
- job: Windowsx86
  pool:
    vmImage: 'windows-latest'
  steps:
  - task: DownloadSecureFile@1
    inputs:
      secureFile: 'C.zip'
  - task: ExtractFiles@1
    inputs:
      archiveFilePatterns: '$(Agent.TempDirectory)\C.zip'
      destinationFolder: 'mathematicaheaders'
      cleanDestinationFolder: true      
  - task: CMake@1
    inputs:
      cmakeArgs: '.. -A Win32 -DCMAKE_BUILD_TYPE=Release -DWLLCZI_MATHEMATICAHEADERS=$(Build.SourcesDirectory)\mathematicaheaders\C -DWLLCZI_BUILD_UNITTESTS=OFF'
  - task: CmdLine@2
    inputs:
      script: 'cmake --build  .\build'
- job: Windowsx64
  pool:
    vmImage: 'windows-latest'
  steps:
  - task: DownloadSecureFile@1
    inputs:
      secureFile: 'C.zip'
  - task: ExtractFiles@1
    inputs:
      archiveFilePatterns: '$(Agent.TempDirectory)\C.zip'
      destinationFolder: 'mathematicaheaders'
      cleanDestinationFolder: true      
  - task: CMake@1
    inputs:
      cmakeArgs: '.. -A x64 -DCMAKE_BUILD_TYPE=Release -DWLLCZI_MATHEMATICAHEADERS=$(Build.SourcesDirectory)\mathematicaheaders\C  -DWLLCZI_BUILD_UNITTESTS=OFF'
  - task: CmdLine@2
    inputs:
      script: 'cmake --build  .\build'      
- job: LinuxARM
  timeoutInMinutes: 240
  dependsOn: 
  - Windowsx86
  - Windowsx64
  pool:
    vmImage: 'ubuntu-latest'
    timeoutInMinutes: 240
  steps:
  - script: echo Hello, world!
    displayName: 'Run a one-line script'
  - script: |
      sudo apt-get -qq install qemu-system-arm expect
      qemu-system-arm --version
      uname -a
      lscpu
      pwd
      sudo modprobe nbd max_part=8   # enable NBD on the host
      wget "https://onedrive.live.com/download?cid=A78BEB4649B27A1A&resid=A78BEB4649B27A1A%21524672&authkey=ALnAfwEWG8RrIeI" -O raspiqemu.zip --no-verbose
      unzip -P "Xrk7#4Pt" raspiqemu.zip    
      rm raspiqemu.zip
      sudo qemu-nbd --read-only --connect=/dev/nbd0 raspiwllczibuildsystem/2020-02-13-raspbian-buster.qcow
      sudo mkdir /mnt/raspi
      sudo mount -o ro,noload /dev/nbd0p2 /mnt/raspi
      ls -l /mnt/raspi
      sudo umount /mnt/raspi/
      sudo qemu-nbd --disconnect /dev/nbd0
      sudo rmmod nbd
      cp CI/autorun.expect raspiwllczibuildsystem/autorun.expect
      cp CI/run_raspi.sh raspiwllczibuildsystem/run_raspi.sh
      chmod +x raspiwllczibuildsystem/autorun.expect
      chmod +x raspiwllczibuildsystem/run_raspi.sh
      cd raspiwllczibuildsystem
      expect  autorun.expect
      echo Add other tasks to build, test, and deploy your project.
      echo See https://aka.ms/yaml
    displayName: 'Run a multi-line script'
